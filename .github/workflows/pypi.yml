name: PyPI Publish

on:
    release:
        types: [released]
    workflow_dispatch:

permissions:
    contents: read

jobs:
    linux:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                target: [x86_64-unknown-linux-gnu, i686-unknown-linux-gnu]
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  target: ${{ matrix.target }}
                  override: true

            - name: Install x86 Build Dependencies
              if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
              run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install libssl-dev:i386 clang

            - name: Install x86_64 Build Dependencies
              if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
              run: sudo apt-get update && sudo apt-get install pkg-config libssl-dev clang

            - name: Build wheels x86
              uses: PyO3/maturin-action@v1
              if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
              env:
                  TARGET_CC: clang
                  OPENSSL_LIB_DIR: /usr/lib/i386-linux-gnu/
                  OPENSSL_INCLUDE_DIR: /usr/include/openssl/
              with:
                  target: ${{ matrix.target }}
                  args: --release --out dist -i python3.12
                  manylinux: auto

            - name: Build wheels x86_64
              uses: PyO3/maturin-action@v1
              if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
              env:
                  TARGET_CC: clang
              with:
                  target: ${{ matrix.target }}
                  args: --release --out dist -i python3.12
                  manylinux: auto

            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels
                  path: dist

    # windows:
    #     runs-on: windows-latest
    #     strategy:
    #         matrix:
    #             target: [x64, x86]
    #     steps:
    #         - name: Checkout Repo
    #           uses: actions/checkout@v4

    #         - uses: actions/setup-python@v4
    #           with:
    #               python-version: "3.12"
    #               architecture: ${{ matrix.target }}

    #         - name: Build wheels
    #           uses: PyO3/maturin-action@v1
    #           with:
    #               target: ${{ matrix.target }}
    #               args: --release --out dist --find-interpreter
    #               sccache: "true"

    #         - name: Upload wheels
    #           uses: actions/upload-artifact@v4
    #           with:
    #               name: wheels
    #               path: dist

    sdist:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Build sdist
              uses: PyO3/maturin-action@v1
              with:
                  command: sdist
                  args: --out dist

            - name: Upload sdist
              uses: actions/upload-artifact@v4
              with:
                  name: wheels
                  path: dist

    release:
        name: Release
        runs-on: ubuntu-latest
        needs: [linux, sdist]
        steps:
            - uses: actions/download-artifact@v4
              with:
                  name: wheels

            - name: Publish to PyPI
              uses: PyO3/maturin-action@v1
              env:
                  MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
              with:
                  command: upload
                  args: --non-interactive --skip-existing *
